const DiscordNotifier = require('./src/notifications/discord-notifier');
const NewsArticleFetcher = require('./src/news-article-fetcher');
const SimpleTrendingAnalyzer = require('./src/services/simple-trending');

async function sendManualMorningReport() {
  try {
    console.log('üåÖ Generating manual morning fantasy intelligence report...');
    
    const discordNotifier = new DiscordNotifier();
    const newsArticleFetcher = new NewsArticleFetcher();
    const trendingAnalyzer = new SimpleTrendingAnalyzer();
    
    // Get latest news
    const latestNews = await newsArticleFetcher.getLatestArticles();
    const newsItems = latestNews.slice(0, 3);
    
    // Get trending players
    const trendingData = await trendingAnalyzer.getTrendingPlayers();
    
    const embed = {
      title: 'üåÖ Manual Morning Fantasy Intelligence Report',
      description: `Good morning! Here's your fantasy football intelligence briefing for ${new Date().toLocaleDateString()}.`,
      color: 0x00FF00,
      fields: [],
      timestamp: new Date().toISOString(),
      footer: {
        text: 'Fantasy Command Center ‚Ä¢ Manual Morning Report'
      }
    };

    // Add trending players
    if (trendingData && trendingData.length > 0) {
      const trendingText = trendingData.slice(0, 5).map(player => 
        `‚Ä¢ **${player.player}** - ${player.reason || 'Trending on social media'}`
      ).join('\n');
      
      embed.fields.push({
        name: 'üìà Trending Players',
        value: trendingText,
        inline: false
      });
    }

    // Add latest news
    if (newsItems.length > 0) {
      const newsText = newsItems.map(article => 
        `‚Ä¢ **${article.title.substring(0, 60)}...**`
      ).join('\n');
      
      embed.fields.push({
        name: 'üì∞ Latest News',
        value: newsText,
        inline: false
      });
    }

    // Add today's focus
    embed.fields.push({
      name: 'üéØ Today\'s Focus',
      value: `‚Ä¢ **Practice Reports**: Monitor injury designations (if Wed-Fri)\n‚Ä¢ **News Monitoring**: Breaking injury/trade news\n‚Ä¢ **Depth Charts**: Watch for starter changes\n‚Ä¢ **Weekly Prep**: Waiver wire and lineup decisions`,
      inline: false
    });

    // Add monitoring status
    embed.fields.push({
      name: 'ü§ñ Monitoring Status',
      value: `‚Ä¢ **Practice Alerts**: ‚úÖ Active (dedicated channel)\n‚Ä¢ **News Feeds**: ‚úÖ Monitoring 8 premium sources\n‚Ä¢ **Trending Analysis**: ‚úÖ Real-time Reddit/social media\n‚Ä¢ **Injury Reports**: ‚úÖ Official NFL.com tracking`,
      inline: false
    });

    // Add commands reminder
    embed.fields.push({
      name: '‚ö° Quick Commands',
      value: `‚Ä¢ \`.practice roster <players>\` - Monitor your team\n‚Ä¢ \`.news\` - Latest articles\n‚Ä¢ \`.trending\` - Hot players\n‚Ä¢ \`.depth\` - Depth chart status\n‚Ä¢ \`.help\` - All commands`,
      inline: false
    });

    await discordNotifier.sendEmbed(embed, 'INFO');
    console.log('‚úÖ Manual morning report sent successfully!');
    
  } catch (error) {
    console.error('‚ùå Failed to send manual morning report:', error.message);
  }
}

// Send the report
sendManualMorningReport();